version: '3'

services:
  # MongoDB service
  # Search API service
  # search-api:
  #   image: search-api-base
  #   container_name: search-api
  #   restart: always
  #   ports:
  #     - "5001:5001"
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - mongodb
  #     - qdrant
  #     - jaeger
  #     - prometheus
  #   environment:
  #     - PYTHONUNBUFFERED=1
  #     - FLASK_APP=main.py
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: secret

  # Qdrant Vector DB service
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    restart: always
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage

  # Redis Stack service
  redis:
    image: redis/redis-stack:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"  # Redis port
      - "8001:8001"  # RedisInsight port
    volumes:
      - redis_data:/data
    environment:
      - REDIS_ARGS=--requirepass admin
      - REDIS_USER=admin

  # Jaeger service for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: hack_jaeger
    restart: always
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"  # UI port
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"    # Zipkin compatible endpoint
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=9411
      
  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: hack_prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: hack_grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus
      

volumes:
  mongodb_data:
  qdrant_data:
  redis_data:
  prometheus_data:
  grafana_data:
